name: CICD

on:
  push:
    branches: main
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.7
      - uses: actions/cache@v2
        id: dep-cache
        with:
          key: ${{ runner.os }}-py${{ matrix.python }}-${{ hashFiles('poetry.lock') }}
          path: |
            /home/runner/.cache/pypoetry/virtualenvs
      - name: Setup dependencies
        if: steps.dep-cache.outputs.cache-hit != 'true'
        run: |
          poetry install
  test:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        python: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.7
      - uses: actions/cache@v2
        id: dep-cache
        with:
          key: ${{ runner.os }}-py${{matrix.python }}-${{ hashFiles('poetry.lock') }}
          path: |
            /home/runner/.cache/pypoetry/virtualenvs
      - name: Setup dependencies
        if: steps.dep-cache.outputs.cache-hit != 'true'
        run: |
          poetry install
      - name: Tests
        run: |
          poetry run pytest --cov-report xml --cov=slack_status_cli -s
      - uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./coverage.xml

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: coverage-report
          path: ./
      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true 
          verbose: true
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.7
      - uses: actions/cache@v2
        id: dep-cache
        with:
          key: ${{ runner.os }}-py3.9-${{ hashFiles('poetry.lock') }}
          path: |
            /home/runner/.cache/pypoetry/virtualenvs
      - name: Setup dependencies
        if: steps.dep-cache.outputs.cache-hit != 'true'
        run: |
          poetry install
      - name: Lint and format
        run: |
          poetry run pylint **/*.py
          poetry run black . --check
  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.7
      - uses: actions/cache@v2
        id: dep-cache
        with:
          key: ${{ runner.os }}-py3.9-${{ hashFiles('poetry.lock') }}
          path: |
            /home/runner/.cache/pypoetry/virtualenvs
      - name: Setup dependencies
        if: steps.dep-cache.outputs.cache-hit != 'true'
        run: |
          poetry install
      - name: Lint and format
        run: |
          poetry build
      - uses: actions/upload-artifact@v2
        with:
          name: current-build
          path: dist/*
  
